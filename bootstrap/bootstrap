#!/usr/bin/env bash

set -e
set -x

GITHUB_USERNAME=${GITHUB_USERNAME:-rjernst}
DOTFILES=/tmp/dotfiles

clone_dotfiles() {
  if [ -d "$DOTFILES" ]; then
    rm -rf $DOTFILES
  fi
  echo "---> cloning bootstrap scripts"
  git clone https://github.com/$GITHUB_USERNAME/dotfiles.git $DOTFILES
}

bootstrap_macos() {
  command -v brew &> /dev/null || {
    echo "---> installing homebrew"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  }
  if [ $ARCH == "arm64" ]; then
    # homebrew on arm it installed to /opt/homebrew
    export PATH=/opt/homebrew/bin:$PATH
  fi
  platform_install() {
    brew install $1
  }
}

bootstrap_arch() {
  platform_install() {
    pacman -S --noconfirm --needed $1
  }
}

bootstrap_unknown() {
  echo "unsupported platform, cannot install dependencies"
  platform_install() {
    echo "Missing $1, please install it"
    exit 1
  }
}

get_platform() {
  if [ $(uname) == "Darwin" ]; then
    echo "macos"
  else
    if [ -f /etc/arch-release ]; then
      echo "arch"
    else
      echo "unknown"
    fi
  fi
}

install_package() {
  command -v $1 &> /dev/null || {
    echo "---> installing $1"
    platform_install $1
  }
}

install_dependencies() {
  install_package git
}

PLATFORM=$(get_platform)
echo "---> detected platform: $PLATFORM"
ARCH=$(uname -m)
echo "---> detected architecture: $ARCH"
EXTRA_VARS="$EXTRA_VARS -e os=$PLATFORM"

eval bootstrap_$PLATFORM
install_dependencies

clone_dotfiles

echo "---> running bootstrap playbook" 
ansible-playbook -vv $ANSIBLE_ROOT/plays/bootstrap.yml $EXTRA_VARS

